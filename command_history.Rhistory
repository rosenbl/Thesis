0.5/1.1
0.5/0.6
table <- read.csv(file.choose(), header=TRUE)
dim(table)
plot(table$Latitude, table$Longitude)
plot(table$Longitude, table$Latitude)
?image
image(table$Longitude, table$Latitude, table[,3])
contour(table$Longitude, table$Latitude, table[,3])
table[,3]
values <- read.csv(file="~/Documents/Teaching/Theses/Blake/datasets/Hendricks2012icethickness_cleaned.csv", header=TRUE)
plot(x=values$Longitude, y=values$Latitude)
plot(x=values$Longitude, y=values$Latitude, pch='.')
map <- read.csv(file.choose(), header=TRUE, stringsAsFactors=TRUE)
plot(map$latitude, map$longitude)
plot(map$SSMI.x.location..km., map$SSMI.y.location..km.)
hist(map$thickness)
map$thickness
as.numeric(map$thickness)
hist(as.numeric(map$thickness))
plot(map$SSMI.x.location..km., map$SSMI.y.location..km.)
dim(map)
set.seed(76)
set <- sample(1:19600, 300)
set
plot(map$SSMI.x.location..km.[set], map$SSMI.y.location..km.[set])
map$SSMI.x.location..km.
plot(as.numeric(map$SSMI.x.location..km.)[set], as.numeric(map$SSMI.y.location..km.)[set])
plot(as.numeric(map$SSMI.x.location..km.), as.numeric(map$SSMI.y.location..km.))
plot(as.numeric(map$SSMI.x.location..km.)[set], as.numeric(map$SSMI.y.location..km.)[set])
thickness <- read.csv("./datasets/icesat_icethk_ma07_filled_cleaned.csv", header=TRUE, stringsAsFactors=FALSE)
thickness$SSMI.x.location..km.
thickness$SSMI.x.location..km. <- as.numeric(thickness$SSMI.x.location..km.)
thickness$SSMI.x.location..km.
n <- 300
subset <- sample(1:nrow(thickness), n)
subset
thickness <- read.csv("./datasets/icesat_icethk_ma07_filled_cleaned.csv", header=TRUE, stringsAsFactors=FALSE)
thickness$SSMI.x.location..km.
thickness$SSMI.x.location..km.[1:100]
as.numeric(thickness$SSMI.x.location..km.[1:100])
thickness$SSMI.x.location..km.
as.numeric(gsub(",","", y))
gsub(",", "", thickness$SSMI.x.location..km.)
as.numeric(gsub(",", "", thickness$SSMI.x.location..km.))
library(openintro)
download.file("http://www.openintro.org/stat/data/nc.RData", destfile = "nc.RData")
load("nc.RData")
source('~/.active-rstudio-document', echo=TRUE)
boxplot(nc$mage ~ nc$mature)
maturedata <- subset(nc, nc$mature == 'mature mom')
boxplot(maturedata)
maturedata <- subset(nc, nc$mature == 'mature mom')
boxplot(maturedata$mage)
gasLocations_withLatLong <- read.csv("~/Documents/Teaching/Theses/Blake/gasLocations_withLatLong.csv")
View(gasLocations_withLatLong)
tbl_df(gasLocations_withLatLong)
library(dplyr)
tbl_df(gasLocations_withLatLong)
gasLocations_withLatLong$WELL_CLASS
library(ggplot2)
qplot(lat, long, data=gasLocations_withLatLong)
ggmap
map_data("world") %>% ggplot(aes(long, lat, group = group)) +
geom_path(color="black")
map_data("world") %>% ggplot(aes(long, lat, group = group)) +
geom_path(color="black")
map_data("world") %>% ggplot(aes(long, lat, group = group)) +
geom_path(color="black") + geom_point(data=gasLocations_withLatLong, aes(x=long, y=lat))
map_data("world") %>% ggplot(aes(long, lat, group = group)) +
geom_path(color="black")
range(gasLocations_withLatLong$long)
range(gasLocations_withLatLong$lat)
qplot(long, lat, data=gasLocations_withLatLong)
library(SpatialEpi)
library(RColorBrewer)
library(classInt)
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyr))
options(stringsAsFactors = FALSE)
setwd("./Documents/Papers/Epi Paper/")
source("./data/SEER_functions.R")
load("./data/ww.RData")
make.brks <- function(x, nclr=5){
classIntervals(x, n=nclr, style="fisher")$brks
}
n.clr <- 5
brks <- data.frame(num=c(1:n.clr))
log.odds <- function(p1, p2){
log(p1) - log(1-p1) - log(p2) + log(1-p2)
}
#-------------------------------------------------------------------------------
# Import and prepare values
#-------------------------------------------------------------------------------
#---------------------------------------------------------------
# Load income data + cut into quintile-based income brackets
#---------------------------------------------------------------
SEER <- tbl_df(read.csv("./data/income1999.csv", header=TRUE)) %>%
slice(1:887) %>% select(-Geography) %>%
rename(
FIPS = Geography.Identifier,
income = Total.population..Per.capita.income.in.1999
) %>%
mutate(
income.log10 = log10(income),
income.bracket = ntile(income, 5)
)
quantile(SEER$income, seq(1/5, 1-1/5, by=1/5))
# Load geo data
load("./data/ww.RData")
sp.obj <- ww$spatial.polygon
centroids <- latlong2grid(ww$geo[, 2:3])
dist <- as.matrix(dist(as.matrix(centroids), upper=TRUE, diag=TRUE))
n <- length(sp.obj)
# Add population data
pop <- tbl_df(ww$population) %>%
rename(FIPS=census_tract) %>%
inner_join(SEER, by="FIPS")%>%
select(-income, -income.log10) %>%
rename(income=income.bracket)
pop.female <- filter(pop, sex=="f")
pop.male <- filter(pop, sex=="m")
SEER <- group_by(pop, FIPS) %>%
summarise(pop=sum(population)) %>%
right_join(SEER, by="FIPS")
#---------------------------------------------------------------
# Import Brain Cancer Data
#---------------------------------------------------------------
# Load brain cancer data
load("./data/brain.RData")
cases <- tbl_df(cases) %>%
rename(FIPS=census_tract) %>%
left_join(SEER, by="FIPS") %>%
select(-income, -income.log10) %>%
rename(income=income.bracket) %>%
select(FIPS, cases, age, sex, race, income)
n.strata <- nrow(cases)/n
SEER <- group_by(cases, FIPS) %>%
summarise(y.brain=sum(cases)) %>%
right_join(SEER, by="FIPS") %>%
mutate(E.brain = expected(pop$population, cases$cases, n.strata)) %>%
mutate(SMR.brain=y.brain/E.brain)
# New income-incorporated E's
q.y <- group_by(cases, age, sex, race, income) %>% summarise(cases=sum(cases))
q.n <- group_by(pop, age, sex, race, income) %>% summarise(pop=sum(population))
q <- inner_join(q.y, q.n) %>% mutate(q=cases/pop) %>% select(-cases, -pop)
SEER <- inner_join(pop, q, by=c("age", "sex", "race", "income")) %>%
group_by(FIPS) %>%
summarize(E.brain.new=sum(q*population)) %>%
inner_join(SEER, by="FIPS") %>%
mutate(SMR.brain.new=y.brain/E.brain.new)
#---------------------------------------------------------------
# Import Breast Cancer Data
#---------------------------------------------------------------
# Load breast cancer data
# NOTE: restrict to females
load("./data/breast.RData")
cases <- tbl_df(cases) %>%
filter(sex=="f") %>%
rename(FIPS=census_tract) %>%
left_join(SEER, by="FIPS") %>%
select(-income, -income.log10) %>%
rename(income=income.bracket) %>%
select(FIPS, cases, age, sex, race, income)
n.strata <- nrow(cases)/n
SEER <- group_by(cases, FIPS) %>%
summarise(y.breast=sum(cases)) %>%
right_join(SEER, by="FIPS") %>%
mutate(E.breast = expected(pop.female$population, cases$cases, n.strata)) %>%
mutate(SMR.breast=y.breast/E.breast)
# New income-incorporated E's
q.y <- group_by(cases, age, race, income) %>% summarise(cases=sum(cases))
q.n <- group_by(pop.female, age, race, income) %>%
summarise(pop=sum(population))
q <- inner_join(q.y, q.n) %>% mutate(q=cases/pop) %>% select(-cases, -pop)
SEER <- inner_join(pop.female, q, by=c("age", "race", "income")) %>%
group_by(FIPS) %>%
summarize(E.breast.new=sum(q*population)) %>%
inner_join(SEER, by="FIPS") %>%
mutate(SMR.breast.new=y.breast/E.breast.new)
#---------------------------------------------------------------
# Import Lung Cancer Data
#---------------------------------------------------------------
# Load lung cancer data
load("./data/lung_and_bronchus.RData")
cases <- tbl_df(cases) %>%
rename(FIPS=census_tract) %>%
left_join(SEER, by="FIPS") %>%
select(-income, -income.log10) %>%
rename(income=income.bracket) %>%
select(FIPS, cases, age, sex, race, income)
n.strata <- nrow(cases)/n
SEER <- group_by(cases, FIPS) %>%
summarise(y.lung=sum(cases)) %>%
right_join(SEER, by="FIPS") %>%
mutate(E.lung = expected(pop$population, cases$cases, n.strata)) %>%
mutate(SMR.lung=y.lung/E.lung)
# New income-incorporated E's
q.y <- group_by(cases, age, sex, race, income) %>% summarise(cases=sum(cases))
q.n <- group_by(pop, age, sex, race, income) %>% summarise(pop=sum(population))
q <- inner_join(q.y, q.n) %>% mutate(q=cases/pop) %>% select(-cases, -pop)
SEER <- inner_join(pop, q, by=c("age", "sex", "race", "income")) %>%
group_by(FIPS) %>%
summarize(E.lung.new=sum(q*population)) %>%
inner_join(SEER, by="FIPS") %>%
mutate(SMR.lung.new=y.lung/E.lung.new)
#---------------------------------------------------------------
# Import Prostate Cancer Data
#---------------------------------------------------------------
# Load prostate cancer data
# NOTE: restrict to females
load("./data/prostate.RData")
cases <- tbl_df(cases) %>%
filter(sex=="m") %>%
rename(FIPS=census_tract) %>%
left_join(SEER, by="FIPS") %>%
select(-income, -income.log10) %>%
rename(income=income.bracket) %>%
select(FIPS, cases, age, sex, race, income)
n.strata <- nrow(cases)/n
SEER <- group_by(cases, FIPS) %>%
summarise(y.prostate=sum(cases)) %>%
right_join(SEER, by="FIPS") %>%
mutate(E.prostate = expected(pop.male$population, cases$cases, n.strata)) %>%
mutate(SMR.prostate=y.prostate/E.prostate)
# New income-incorporated E's
q.y <- group_by(cases, age, race, income) %>% summarise(cases=sum(cases))
q.n <- group_by(pop.male, age, race, income) %>%
summarise(pop=sum(population))
q <- inner_join(q.y, q.n) %>% mutate(q=cases/pop) %>% select(-cases, -pop)
SEER <- inner_join(pop.male, q, by=c("age", "race", "income")) %>%
group_by(FIPS) %>%
summarize(E.prostate.new=sum(q*population)) %>%
inner_join(SEER, by="FIPS") %>%
mutate(SMR.prostate.new=y.prostate/E.prostate.new)
#-------------------------------------------------------------------------------
# Run Models
#-------------------------------------------------------------------------------
max.prop <- 0.15
shape <- c(2976.3, 2.31)
rate <- c(2977.3, 1.31)
J <- 7
pi0 <- 0.95
n.sim.lambda <- 10^4
n.sim.prior <- 10^5
n.sim.post <- 10^5
n.sim.kulldorff <- 9999
alpha <- 0.05
# Load previous simulations
load("./data/paper.RData")
#---------------------------------------------------------------
# Brain
#---------------------------------------------------------------
#------------------------------------------------
# No income
#------------------------------------------------
# start <- proc.time()[3]
# SEER.brain <-
#   bayes_cluster(SEER$y.brain, SEER$E.brain, SEER$pop, sp.obj, centroids,
#                 max.prop, shape, rate, J, pi0, n.sim.lambda, n.sim.prior,
#                 n.sim.post)
# end <- proc.time()[3]
# (end-start)/3600
# kulldorff.brain <-
#   kulldorff(centroids, SEER$y.brain, SEER$pop, SEER$E.brain, max.prop,
#             n.sim.kulldorff, 0.05, plot=TRUE)
# save.image(file="./data/paper.RData")
# Set up only once
SEER$prior.high <- SEER.breast$prior.map$high.area
n.clust <- data.frame(
j = 0:J,
prior.j = SEER.brain$prior.j
)
# Add results
n.clust$brain.post.j <- SEER.brain$pj.y
SEER$brain.post.high <- SEER.brain$post.map$high.area
SEER$brain.log.BF.high <- log.odds(SEER$brain.post.high, SEER$prior.high)
SEER$brain.RR <- SEER.brain$post.map$RR.est.area
#------------------------------------------------
# Income
#------------------------------------------------
# start <- proc.time()[3]
# SEER.brain.new <-
#   bayes_cluster(SEER$y.brain, SEER$E.brain.new, SEER$pop, sp.obj, centroids,
#                 max.prop, shape, rate, J, pi0, n.sim.lambda, n.sim.prior,
#                 n.sim.post)
# end <- proc.time()[3]
# (end-start)/3600
# kulldorff.brain.new <-
#   kulldorff(centroids, SEER$y.brain, SEER$pop, SEER$E.brain.new, max.prop,
#             n.sim.kulldorff, 0.05, plot=TRUE)
# save.image(file="./data/paper.RData")
# Add results
n.clust$brain.new.post.j <- SEER.brain.new$pj.y
SEER$brain.new.post.high <- SEER.brain.new$post.map$high.area
SEER$brain.new.log.BF.high <- log.odds(SEER$brain.new.post.high, SEER$prior.high)
SEER$brain.new.RR <- SEER.brain.new$post.map$RR.est.area
#---------------------------------------------------------------
# Breast
#---------------------------------------------------------------
#------------------------------------------------
# No income
#------------------------------------------------
# start <- proc.time()[3]
# SEER.breast <-
#   bayes_cluster(SEER$y.breast, SEER$E.breast, SEER$pop, sp.obj, centroids,
#                 max.prop, shape, rate, J, pi0, n.sim.lambda, n.sim.prior,
#                 n.sim.post)
# end <- proc.time()[3]
# (end-start)/3600
# kulldorff.breast <-
#   kulldorff(centroids, SEER$y.breast, SEER$pop, E.breast, max.prop,
#             n.sim.kulldorff, 0.05, plot=TRUE)
# save.image(file="./data/paper.RData")
# Add results
n.clust$breast.post.j <- SEER.breast$pj.y
SEER$breast.post.high <- SEER.breast$post.map$high.area
SEER$breast.log.BF.high <- log.odds(SEER$breast.post.high, SEER$prior.high)
SEER$breast.RR <- SEER.breast$post.map$RR.est.area
#-------------------------------------------------
# Breast New
#-------------------------------------------------
# start <- proc.time()[3]
# SEER.breast.new <-
#   bayes_cluster(SEER$y.breast, SEER$E.breast.new, SEER$pop, sp.obj, centroids,
#                 max.prop, shape, rate, J, pi0, n.sim.lambda, n.sim.prior,
#                 n.sim.post)
# end <- proc.time()[3]
# (end-start)/3600
# kulldorff.breast.new <-
#   kulldorff(centroids, SEER$y.breast, SEER$pop, E.breast.new, max.prop,
#             n.sim.kulldorff, 0.05, plot=TRUE)
# save.image(file="./data/paper.RData")
# Add results
n.clust$breast.new.post.j <- SEER.breast.new$pj.y
SEER$breast.new.post.high <- SEER.breast.new$post.map$high.area
SEER$breast.new.log.BF.high <- log.odds(SEER$breast.new.post.high, SEER$prior.high)
SEER$breast.new.RR <- SEER.breast.new$post.map$RR.est.area
data <- read.csv("~/Desktop/GitThesis/gasLocations_withLatLong.csv", header = "TRUE")
library(ggmap)
library(ggplot2)
mapImageData <- get_map(location = c(long = mean(data$long),
lat = mean(data$lat)),
color = "color", # or bw
source = "google",
maptype = "roadmap",
zoom = 9)
ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right") +
geom_point(data = data, aes(x = long,
y = lat))
data <- read.csv("./gasLocations_withLatLong.csv", header = "TRUE")
getwd()
data <- read.csv("./ggmaps/gasLocations_withLatLong.csv", header = "TRUE")
data <- read.csv("./gasLocations_withLatLong.csv", header = "TRUE")
data
data <- read.csv("./gasLocations_withLatLong.csv", header = TRUE)
library(ggmap)
library(ggplot2)
mapImageData <- get_map(location = c(long = mean(data$long),
lat = mean(data$lat)),
color = "color", # or bw
source = "google",
maptype = "roadmap",
zoom = 9)
ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right") +
geom_point(data = data, aes(x = long,
y = lat))
names(data)
ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right",
color= NOX) +
geom_point(data = data, aes(x = long,
y = lat))
ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right") +
geom_point(data = data, aes(x = long,
y = lat, color=NOX))
data$NOX
as.numeric(data$NOX)
data$NOX
gsub(data$NOX, ",", "")
?gsub
gsub(",", "", data$NOX)
data$NOX <- gsub(",", "", data$NOX)
data$NOX
data$NOX <- as.numeric(data$NOX)
data$NOX
ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right") +
geom_point(data = data, aes(x = long,
y = lat, color=NOX))
library(ggplot2)
library(ggplot2)
p <- ggplot(melt(volcano), aes(x = X1, y = X2, z = value,fill = value)) + geom_tile()
print(p)
volcano
library(ggplot2)
p <- ggplot(volcano, aes(x = X1, y = X2, z = value,fill = value)) + geom_tile()
print(p)
install.packages("reshape2")
library(reshape2)
library(ggplot2)
p <- ggplot(volcano, aes(x = X1, y = X2, z = value,fill = value)) + geom_tile()
print(p)
library(ggplot2)
p <- ggplot(melt(volcano), aes(x = X1, y = X2, z = value,fill = value)) + geom_tile()
print(p)
melt(volcanoe)
melt(volcano)
melt(volcano) %>% tbl_df()
library(dplyr)
melt(volcano) %>% tbl_df()
well_logs <- read.csv("~/Documents/Teaching/Theses/Blake/well_logs.csv", header=FALSE)
View(well_logs)
well_logs <- read.csv("~/Documents/Teaching/Theses/Blake/well_logs.csv", header=TRUE)
library(dplyr
)
well_logs[1,]
well_logs[1,49]
well_logs <- well_logs %>% tbl_df()
filter(well_logs, !is.na(longitude))
well_logs <- filter(well_logs, !is.na(longitude))
plot(well_logs$longitude, well_logs$latitude)
plot(well_logs$longitude, well_logs$latitude, xlim=c(-1000, 0), ylim=c(0, 1000))
plot(well_logs$longitude, well_logs$latitude)
well_logs[1,49]
well_logs$location_county
unique(well_logs$location_county)
View(well_logs)
well_logs$longitude
well_logs$latitude
plot(well_logs$longitude, well_logs$latitude)
plot(as.numeric(well_logs$longitude), as.numeric(well_logs$latitude))
well_logs$longitude
range(well_logs$longitude)
hist(well_logs$longitude)
well_logs <- filter(well_logs, longitude >= -124.5, longitude <= -116.5)
well_logs <- filter(well_logs, latitude >= 42, latitude <= 46.5)
plot(as.numeric(well_logs$longitude), as.numeric(well_logs$latitude))
dim(well_logts)
dim(well_logs)
savehistory("~/Documents/Teaching/Theses/Blake/command_history.Rhistory")
